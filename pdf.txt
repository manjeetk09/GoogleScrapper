Open-Domain Semantic Parsing with Boxer 
Johan Bos 
Center for Language and Cognition 
University of Groningen 
johan.bos@rug.nl 
Abstract 
Boxer is a semantic parser for English texts with many input and output possibil ities, and various ways to perform mean ing analysis based on Discourse Represen tation Theory. This involves the various ways that meaning representations can be computed, as well as their possible seman tic ingredients. 
1 
Introduction 
In this paper I present the capabilities of the open domain semantic parser Boxer. Boxer is dis tributed with the C&C text processing tools (Cur ran et al., 2007), and its main characteristics were ﬁrst described in my earlier work (Bos, 2008). The roots of the current version of Boxer go back even further, long before Boxer was ofﬁcially released to the community (Bos et al., 2004; Bos, 2001). 
Boxer distinguishes itself from other seman tic parsers in that it produces formal meaning representations (compatible with ﬁrst-order logic) while reaching wide coverage, and is therefore used in a range of applications (Basile et al., 2012; Bjerva et al., 2014). To get an idea of what Boxer does, consider the input and output in Figure 1. 
John did not go to school . 
__________________ 
|e2 x3 
|x1 | |..................| |named(x1,john,per)| | ____________ | | || | ¬ |............|| |go(e2) | || | |agent(e2,x1)|| || |school(x3) | |to(e2,x3) | || | |____________|| |__________________| 
Figure 1: Example of Boxer’s input and output. 
Here, the input is a simple sentence, and Boxer’s output a formal interpretation of this sentence: there is a person x1 named “john”, and it is not the case that there is a school-going-event e2 that involves the entities x1 (John) and a school (de noted by entity x3). But Boxer has a lot more to offer, and what this paper contributes (and adds with respect to previous publications) is a ﬁne grained description of the many possibilities that Boxer provides for the formal semantic analysis of text processing. 
Interface Formats 
2 The input of the Boxer system is a syntactic anal ysis in the form of a derivation of combinatorial categorial grammar, CCG (Steedman, 2001). This input can be augmented in order to incorporate in formation of external language technology com ponents. The output is a meaning representation, produced in a variety of standard formats. 
Input 
2.1 Boxer requires a syntactic analysis of the text in the form of CCG-derivations, every sentence cor responding to one CCG derivation. The derivation itself is represented as a ccg/2 Prolog term, com prising a sentence identiﬁer and a recursively built structure of combinatorial rules (such as fa/3, ba/3, and so on), and terminals (the lexical items). All combinatorial rules of CCG are supported, including the generalized composition rules and the type-changing rules introduced in CCGbank (Hockenmaier and Steedman, 2007). 
The terminals are captured by a Prolog term consisting of the CCG category (Boxer imple ments about 600 different lexical category types), the token, its lemma, and part-of-speech. Infor mation of external tools can also be included here, such as word sense disambiguation, thematic role labelling, noun-noun compound interpretation, or reference resolution. 
sem(1,[1001:[tok:’John’,pos:’NNP’,lemma:’John’,namex:’I-PER’], 
1002:[tok:did,pos:’VBD’,lemma:do,namex:’O’], 1003:[tok:not,pos:’RB’,lemma:not,namex:’O’], 1004:[tok:go,pos:’VB’,lemma:go,namex:’O’], 1005:[tok:to,pos:’TO’,lemma:to,namex:’O’], 1006:[tok:school,pos:’NN’,lemma:school,namex:’O’], 1007:[tok:’.’,pos:’.’,lemma:’.’,namex:’O’]], 
b2:drs([b1:[]:x1], 
[b1:[1001]:named(x1,john,per,nam), 
b2:[1003]:not(b3:drs([b3:[]:e1,b3:[]:x2], 
[b3:[1004]:pred(e1,go,v,0), b3:[]:role(e1,x1,agent,1), b3:[1006]:pred(x2,school,n,0), b3:[1005]:rel(e1,x2,to,0)]))])). 
Figure 2: Boxer’s output in Prolog format, for “John does not go to school.” 
Any parser can be used to support Boxer, as long as it produces CCG derivation in the required Prolog format. The standard parser used in tan dem with Boxer is that of the C&C tools (Clark and Curran, 2004). Alternatively, other parsers can be used, such as EasyCCG (Lewis and Steed man, 2014). The lemmas can be provided by off the-shells tools like morpha (Minnen et al., 2001). 
By default, Boxer produces a meaning repre sentation for every sentence in the input. How ever, with --integrate true it computes a sin gle meaning representation spanning all sentences, with separate boxes corresponding to all sen tences. Instead, using --theory sdrt, a Seg mented Discourse Representation Structure is pro duced, following SDRT (Asher, 1993). 
2.2 Output The standard output is a meaning representation in the form of a Discourse Representation Structure (Kamp and Reyle, 1993). This output is standard shown in Prolog format, but can also be produced in XML (with the --format xml option). Out put can also be suppressed, with --format no, in case only human-readable output is wanted. 
For the user’s convenience, the meaning can also be displayed in boxed format (with the --box true option), as shown above. In com bination with --instantiate true, this yields convenient names for discourse referents that appear in the boxes. Additionally, with the --ccg true option, a pretty-printed version of the input CCG-derivation is presented to the user. 
3 Semantic Frameworks 
3.1 Semantic Theory The backbone of Boxer’s meaning representations is provided by Discourse Representation Theory, DRT (Kamp and Reyle, 1993). Boxer follows the theory closely (--theory drt), except with respect to (i) event semantics, where it adopts a neo-Davidsonian approach, and (ii) the analysis of sentential complements, where Boxer follows an analysis based on modal logic (Bos, 2004). 
3.2 Meaning Translations 
The meaning representations of Discourse Rep resentation Theory can be shaped in different ways, and Boxer supports several of these possi bilities. The standard representations are DRSs (Discourse Representation Structures, the boxes, selected with --semantics drs). Alternatively DRSs can be shown as Projective DRSs (Ven huizen et al., 2013) using --semantics pdrs, where each DRS is labelled with a pointer, and each DRS-condition receives a pointer to the DRS in which it appears. 
For some applications and users with differ ent mind-sets, Boxer comes with an option to translate DRSs into other types of meaning rep resentation. First of all, with --semantics fol, Boxer supports the well-known translation from boxes to ﬁrst-order logic (Kamp and Reyle, 1993; Bos, 2004), or to DRSs in the form of graphs (Basile and Bos, 2013), when invoked with --semantics drg. Secondly, the meaning repre sentations can be translated into ﬂat logical forms, as proposed in Jerry Hobbs’s framework (Hobbs, 1991), with --semantics tacitus. Note that not all of these translations are necessary meaning preserving, becauce of the differences in expres sive power between the formalisms. 
4 Meaning Details 
The devil is in the detail. Indeed, to get the most out of Boxer, it is important to know what features it offers to compute meaning representations. 
4.1 Linguistic Features Copula Notorious among computational se manticists is the analysis of the copula. Boxer gives two options: to interpret the copula as were it an ordinary transitive verb (--copula false), or by introducing an equality symbol between two entities (--copula true). The latter option has as advantage that certain inferences can directly be drawn, but as disadvantage that some nuances of meaning are lost (i.e., the distinction between John is a teacher and John was a teacher). Multiword Expressions Boxer provides two ways to represent compound proper names. With --mwe no a compound name such as Barack Obama is represented by two naming condi tions (with the non-logical symbols barack and obama), and with --mwe yes as a single naming condition (with symbol barack~obama). Noun–Noun Compounds Noun–noun com pounds are interpreted as two entities that form a certain relation. By default, Boxer picks the generic prepositional of –relation. With --nn true, Boxer attempts to disambiguate noun-noun compound relations by selecting from a set of prepositional relations (Bos and Nissim, For instance, beach house would be 2015). interpreted as: house(x) ∧ beach(y) ∧ at(x,y). Reference Resolution By default Boxer doesn’t resolve pronouns or other referential expressions, but with --resolve true, Boxer attempts to re solve pronouns, proper names and deﬁnite de scriptions (currently using a rule-based approach). The foundational algorithm to accomplish this is based on Van der Sandt’s theory of presupposition projection (Van der Sandt, 1992). The discourse referents of the selected antecedents are uniﬁed with those of the referential expression. Thematic Role Labelling As mentioned above, Boxer follows a neo-Davidsonian approach to event semantics. This means that events (usu ally triggered by verbs) introduce discourse refer ents, and these are related to discourse referents of participants by two-place relations, the thematic roles. Standard (--roles proto) these roles 
are picked from a set of ﬁve proto-roles: agent, theme, topic, recipient, and experiencer. A more ﬁne-grained inventory of roles is employed with --roles verbnet, producing thematic roles as provided by VerbNet (Kipper et al., 2008). This is done by mapping the obtained proto-roles to Verb Net roles, using a simple deterministic approach in the semantic lexicon of Boxer. 
4.2 Logical Features Eliminating Equality In some cases equality symbols can be elimated from the meaning rep resentation, resulting in a logically equivalent log ical form. This is possible, for instance, when the two variables within an equality relation are bound by discourse referents introduced in the same DRS as the equality condition. Equality conditions are introduced by a range of lexical entries, but in the ﬁnal meaning representation they don’t play a fun damental role. With --elimeq true such equal ity conditions are removed and their correspond ing discourse referents uniﬁed. Modal Modal expressions (as introduced by modal adverbs or modal verbs) can be made ex plicit in the meaning representation by invok ing --modal true. This triggers two addi tional complex DRS-conditions formed by the unary box and diamond operators from modal logic, expressing necessity (univerally quantify ing over possible worlds) and possibility (existen tially quantifying over possible worlds). This op tion also has an effect on the translation to ﬁrst order logic, and when used in combination with --semantics fol the translation to modal ﬁrst order logic is used (with reiﬁcation over possible worlds). Tense The standard reference textbook for Dis course Representation Theory has an extensive analysis of various tenses found in the English lan guage (Kamp and Reyle, 1993). Boxer aims to re produce this analysis with --tense true. This involves additional relations and discourse refer ents related to the events introduced by the text. 
5 Conclusion I have outlined a large set of possibilities that the semantic parser Boxer offers. These concern input and output modalities, as well as the level of de tail of meaning interpretation. I will demonstrate a selection of these features at the conference. 
Linguistics Companion Volume Proceedings of the Demo and Poster Sessions, pages 33–36, Prague, Czech Republic. 
Jerry R. Hobbs. 1991. SRI international’s TACITUS In Pro system: MUC-3 test results and analysis. ceedings of the 3rd Conference on Message Under standing, MUC 1991, San Diego, California, USA, May 21-23, 1991, pages 105–107. 
Julia Hockenmaier and Mark Steedman. 2007. CCG bank: a corpus of CCG derivations and dependency structures extracted from the Penn Treebank. Com putational Linguistics, 33(3):355–396. 
Hans Kamp and Uwe Reyle. 1993. From Discourse to Logic; An Introduction to Modeltheoretic Seman tics of Natural Language, Formal Logic and DRT. Kluwer, Dordrecht. 
Karin Kipper, Anna Korhonen, Neville Ryant, and Martha Palmer. 2008. A large-scale classiﬁcation of English verbs. Language Resources and Evalua tion, 42(1):21–40. 
Mike Lewis and Mark Steedman. 2014. A* ccg pars In Proceed ing with a supertag-factored model. ings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 990–1000, Doha, Qatar, October. Association for Computational Linguistics. 
Guido Minnen, John Carroll, and Darren Pearce. 2001. Applied morphological processing of english. Jour nal of Natural Language Engineering, 7(3):207– 223. 
Mark Steedman. 2001. The Syntactic Process. The 
MIT Press. 
Rob A. Van der Sandt. 1992. Presupposition Projec tion as Anaphora Resolution. Journal of Semantics, 9:333–377. 
Noortje Venhuizen, Johan Bos, and Harm Brouwer. 2013. Parsimonious semantic representations with projection pointers. In Proceedings of the 10th In ternational Conference on Computational Seman tics (IWCS 2013) – Long Papers, pages 252–263, Potsdam, Germany. 
References Nicholas Asher. 1993. Reference to Abstract Objects 
in Discourse. Kluwer Academic Publishers. 
Valerio Basile and Johan Bos. 2013. Aligning for mal meaning representations with surface strings for In Proceedings of wide-coverage text generation. the 14th European Workshop on Natural Language Generation, pages 1–9, Soﬁa, Bulgaria. 
Valerio Basile, Johan Bos, Kilian Evang, and Noortje Venhuizen. 2012. Negation detection with dis course representation structures. In The First Joint Conference on Lexical and Computational Seman tics (*SEM 2012 Shared Task), pages 301–309, Montreal, Canada. 
Johannes Bjerva, Johan Bos, Rob Van der Goot, and Malvina Nissim. 2014. The meaning factory: For mal semantics for recognizing textual entailment and determining semantic similarity. In Proceedings of the 8th International Workshop on Semantic Eval uation (SemEval 2014), pages 642–646, Dublin, Ire land. 
Johan Bos and Malvina Nissim. 
2015. Uncover ing noun-noun compound relations by gamiﬁcation. In Be´ata Megyesi, editor, Proceedings of the 20th Nordic Conference of Computational Linguistics. 
Johan Bos, Stephen Clark, Mark Steedman, James R. Curran, and Julia Hockenmaier. 2004. Wide Coverage Semantic Representations from a CCG In Proceedings of the 20th International Parser. Conference on Computational Linguistics (COLING ’04), pages 1240–1246, Geneva. 
Johan Bos. 2001. DORIS 2001: Underspeciﬁcation, Resolution and Inference for Discourse Representa tion Structures. In Patrick Blackburn and Michael Kohlhase, editors, ICoS-3, Inference in Computa tional Semantics, pages 117–124. 
Johan Bos. 2004. Computational Semantics in Dis course: Underspeciﬁcation, Resolution, and Infer ence. Journal of Logic, Language and Information, 13(2):139–157. 
Johan Bos. 2008. Wide-Coverage Semantic Analy sis with Boxer. In J. Bos and R. Delmonte, editors, Semantics in Text Processing. STEP 2008 Confer ence Proceedings, volume 1 of Research in Compu tational Semantics, pages 277–286. College Publi cations. 
Stephen Clark and James R. Curran. 2004. Parsing the In Pro WSJ using CCG and Log-Linear Models. ceedings of the 42nd Annual Meeting of the Associa tion for Computational Linguistics (ACL ’04), pages 104–111, Barcelona, Spain. 
James Curran, Stephen Clark, and Johan Bos. 2007. Linguistically Motivated Large-Scale NLP with In Proceedings of the 45th An C&C and Boxer. nual Meeting of the Association for Computational 
