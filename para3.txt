Posted June 7th, 2010, by Colin Walls
AMP stands for Asymmetric Multi-Processing; SMP means Symmetric Multi-Processing. These terms are not at all transparent. In seeking a means to clarify, I thought I would check Wikipedia and looked up “AMP”. From the disambiguation page, I found the relevant article. Well, I say “relevant”, but it really does not cover the topic as we see it today. It talks about historical uses of multiple CPUs and dismisses it to history. So, I will try to advance definitions:
AMP stands for Asymmetric Multi-Processing; SMP means Symmetric Multi-Processing. These terms are not at all transparent. In seeking a means to clarify, I thought I would check Wikipedia and looked up “AMP”. From the disambiguation page, I found the relevant article. Well, I say “relevant”, but it really does not cover the topic as we see it today. It talks about historical uses of multiple CPUs and dismisses it to history. So, I will try to advance definitions:
AMP stands for Asymmetric Multi-Processing; SMP means Symmetric Multi-Processing. These terms are not at all transparent. In seeking a means to clarify, I thought I would check Wikipedia and looked up “AMP”. From the disambiguation page, I found the relevant article. Well, I say “relevant”, but it really does not cover the topic as we see it today. It talks about historical uses of multiple CPUs and dismisses it to history. So, I will try to advance definitions:
AMP stands for Asymmetric Multi-Processing; SMP means Symmetric Multi-Processing. These terms are not at all transparent. In seeking a means to clarify, I thought I would check Wikipedia and looked up “AMP”. From the disambiguation page, I found the relevant article. Well, I say “relevant”, but it really does not cover the topic as we see it today. It talks about historical uses of multiple CPUs and dismisses it to history. So, I will try to advance definitions:
AMP stands for Asymmetric Multi-Processing; SMP means Symmetric Multi-Processing. These terms are not at all transparent. In seeking a means to clarify, I thought I would check Wikipedia and looked up “AMP”. From the disambiguation page, I found the relevant article. Well, I say “relevant”, but it really does not cover the topic as we see it today. It talks about historical uses of multiple CPUs and dismisses it to history. So, I will try to advance definitions:
AMP stands for Asymmetric Multi-Processing; SMP means Symmetric Multi-Processing. These terms are not at all transparent. In seeking a means to clarify, I thought I would check Wikipedia and looked up “AMP”. From the disambiguation page, I found the relevant article. Well, I say “relevant”, but it really does not cover the topic as we see it today. It talks about historical uses of multiple CPUs and dismisses it to history. So, I will try to advance definitions:
AMP stands for Asymmetric Multi-Processing; SMP means Symmetric Multi-Processing. These terms are not at all transparent. In seeking a means to clarify, I thought I would check Wikipedia and looked up “AMP”. From the disambiguation page, I found the relevant article. Well, I say “relevant”, but it really does not cover the topic as we see it today. It talks about historical uses of multiple CPUs and dismisses it to history. So, I will try to advance definitions:
By: Colin Walls, Posted on: June 17, 2015
By: Colin Walls, Posted on: June 17, 2015
By: Colin Walls, Posted on: June 17, 2015
     



     



September 22, 2016 Leave a Comment
Asymmetric multiprocessing (AMP) was the only method for handling multiple CPUs before symmetric multiprocessing (SMP) was available. It has also been used to provide less expensive options on systems where SMP was available. Additionally, AMP is used in applications that are dedicated, such as embedded systems, when individual processors can be dedicated to specific tasks at design time. In an asymmetric multiprocessing system, not all CPUs are treated equally; for example, a system might only allow (either at the hardware or operating system level) one CPU to execute operating system code or might only allow one CPU to perform I/O operations. Other AMP systems would allow any CPU to execute operating system code and perform I/O operations, so that they were symmetric with regard to processor roles, but attached some or all peripherals to particular CPUs, so that they were asymmetric with regard to peripheral attachment.
Asymmetric multiprocessing (AMP) was the only method for handling multiple CPUs before symmetric multiprocessing (SMP) was available. It has also been used to provide less expensive options on systems where SMP was available. Additionally, AMP is used in applications that are dedicated, such as embedded systems, when individual processors can be dedicated to specific tasks at design time. In an asymmetric multiprocessing system, not all CPUs are treated equally; for example, a system might only allow (either at the hardware or operating system level) one CPU to execute operating system code or might only allow one CPU to perform I/O operations. Other AMP systems would allow any CPU to execute operating system code and perform I/O operations, so that they were symmetric with regard to processor roles, but attached some or all peripherals to particular CPUs, so that they were asymmetric with regard to peripheral attachment.
Asymmetric multiprocessing (AMP) was the only method for handling multiple CPUs before symmetric multiprocessing (SMP) was available. It has also been used to provide less expensive options on systems where SMP was available. Additionally, AMP is used in applications that are dedicated, such as embedded systems, when individual processors can be dedicated to specific tasks at design time. In an asymmetric multiprocessing system, not all CPUs are treated equally; for example, a system might only allow (either at the hardware or operating system level) one CPU to execute operating system code or might only allow one CPU to perform I/O operations. Other AMP systems would allow any CPU to execute operating system code and perform I/O operations, so that they were symmetric with regard to processor roles, but attached some or all peripherals to particular CPUs, so that they were asymmetric with regard to peripheral attachment.
Asymmetric multiprocessing (AMP) was the only method for handling multiple CPUs before symmetric multiprocessing (SMP) was available. It has also been used to provide less expensive options on systems where SMP was available. Additionally, AMP is used in applications that are dedicated, such as embedded systems, when individual processors can be dedicated to specific tasks at design time. In an asymmetric multiprocessing system, not all CPUs are treated equally; for example, a system might only allow (either at the hardware or operating system level) one CPU to execute operating system code or might only allow one CPU to perform I/O operations. Other AMP systems would allow any CPU to execute operating system code and perform I/O operations, so that they were symmetric with regard to processor roles, but attached some or all peripherals to particular CPUs, so that they were asymmetric with regard to peripheral attachment.
Asymmetric multiprocessing (AMP) was the only method for handling multiple CPUs before symmetric multiprocessing (SMP) was available. It has also been used to provide less expensive options on systems where SMP was available. Additionally, AMP is used in applications that are dedicated, such as embedded systems, when individual processors can be dedicated to specific tasks at design time. In an asymmetric multiprocessing system, not all CPUs are treated equally; for example, a system might only allow (either at the hardware or operating system level) one CPU to execute operating system code or might only allow one CPU to perform I/O operations. Other AMP systems would allow any CPU to execute operating system code and perform I/O operations, so that they were symmetric with regard to processor roles, but attached some or all peripherals to particular CPUs, so that they were asymmetric with regard to peripheral attachment.


Asymmetric multiprocessing (AMP) was the only method for handling multiple CPUs before symmetric multiprocessing (SMP) was available. It has also been used to provide less expensive options on systems where SMP was available. Additionally, AMP is used in applications that are dedicated, such as embedded systems, when individual processors can be dedicated to specific tasks at design time. In an asymmetric multiprocessing system, not all CPUs are treated equally; for example, a system might only allow (either at the hardware or operating system level) one CPU to execute operating system code or might only allow one CPU to perform I/O operations. Other AMP systems would allow any CPU to execute operating system code and perform I/O operations, so that they were symmetric with regard to processor roles, but attached some or all peripherals to particular CPUs, so that they were asymmetric with regard to peripheral attachment.
Asymmetric multiprocessing (AMP) was the only method for handling multiple CPUs before symmetric multiprocessing (SMP) was available. It has also been used to provide less expensive options on systems where SMP was available. Additionally, AMP is used in applications that are dedicated, such as embedded systems, when individual processors can be dedicated to specific tasks at design time. In an asymmetric multiprocessing system, not all CPUs are treated equally; for example, a system might only allow (either at the hardware or operating system level) one CPU to execute operating system code or might only allow one CPU to perform I/O operations. Other AMP systems would allow any CPU to execute operating system code and perform I/O operations, so that they were symmetric with regard to processor roles, but attached some or all peripherals to particular CPUs, so that they were asymmetric with regard to peripheral attachment.
Asymmetric multiprocessing (AMP) was the only method for handling multiple CPUs before symmetric multiprocessing (SMP) was available. It has also been used to provide less expensive options on systems where SMP was available. Additionally, AMP is used in applications that are dedicated, such as embedded systems, when individual processors can be dedicated to specific tasks at design time. In an asymmetric multiprocessing system, not all CPUs are treated equally; for example, a system might only allow (either at the hardware or operating system level) one CPU to execute operating system code or might only allow one CPU to perform I/O operations. Other AMP systems would allow any CPU to execute operating system code and perform I/O operations, so that they were symmetric with regard to processor roles, but attached some or all peripherals to particular CPUs, so that they were asymmetric with regard to peripheral attachment.
Asymmetric multiprocessing (AMP) was the only method for handling multiple CPUs before symmetric multiprocessing (SMP) was available. It has also been used to provide less expensive options on systems where SMP was available. Additionally, AMP is used in applications that are dedicated, such as embedded systems, when individual processors can be dedicated to specific tasks at design time. In an asymmetric multiprocessing system, not all CPUs are treated equally; for example, a system might only allow (either at the hardware or operating system level) one CPU to execute operating system code or might only allow one CPU to perform I/O operations. Other AMP systems would allow any CPU to execute operating system code and perform I/O operations, so that they were symmetric with regard to processor roles, but attached some or all peripherals to particular CPUs, so that they were asymmetric with regard to peripheral attachment.
Asymmetric multiprocessing (AMP) was the only method for handling multiple CPUs before symmetric multiprocessing (SMP) was available. It has also been used to provide less expensive options on systems where SMP was available. Additionally, AMP is used in applications that are dedicated, such as embedded systems, when individual processors can be dedicated to specific tasks at design time. In an asymmetric multiprocessing system, not all CPUs are treated equally; for example, a system might only allow (either at the hardware or operating system level) one CPU to execute operating system code or might only allow one CPU to perform I/O operations. Other AMP systems would allow any CPU to execute operating system code and perform I/O operations, so that they were symmetric with regard to processor roles, but attached some or all peripherals to particular CPUs, so that they were asymmetric with regard to peripheral attachment.
symmetric asymmetric
symmetric asymmetric


Asymmetric multiprocessing    In asymmetric multiprocessing the program tasks (or threads) are strictly divided by type between processors and typically, each processor has its own memory address space.  These features make asymmetric multiprocessing difficult to implement. The two figures below are two examples of asymmetric multiprocessor configurations. 
Asymmetric multiprocessing    In asymmetric multiprocessing the program tasks (or threads) are strictly divided by type between processors and typically, each processor has its own memory address space.  These features make asymmetric multiprocessing difficult to implement. The two figures below are two examples of asymmetric multiprocessor configurations. 
Asymmetric multiprocessing    In asymmetric multiprocessing the program tasks (or threads) are strictly divided by type between processors and typically, each processor has its own memory address space.  These features make asymmetric multiprocessing difficult to implement. The two figures below are two examples of asymmetric multiprocessor configurations. 
Asymmetric multiprocessing    In asymmetric multiprocessing the program tasks (or threads) are strictly divided by type between processors and typically, each processor has its own memory address space.  These features make asymmetric multiprocessing difficult to implement. The two figures below are two examples of asymmetric multiprocessor configurations. 
 Symmetric multiprocessing Symmetric multiprocessing (SMP) is the most common configuration of multiple processors. A typical SMP configuration has the following items:        It has multiple processors and exactly one of everything else: memory, I/O subsystem, operating system, etc.        The processors are symmetric, that is, they can do anything the others can.  Each can look at or alter any element of memory, and each can do any kind of I/O. 
 Symmetric multiprocessing Symmetric multiprocessing (SMP) is the most common configuration of multiple processors. A typical SMP configuration has the following items:        It has multiple processors and exactly one of everything else: memory, I/O subsystem, operating system, etc.        The processors are symmetric, that is, they can do anything the others can.  Each can look at or alter any element of memory, and each can do any kind of I/O. 
 Symmetric multiprocessing Symmetric multiprocessing (SMP) is the most common configuration of multiple processors. A typical SMP configuration has the following items:        It has multiple processors and exactly one of everything else: memory, I/O subsystem, operating system, etc.        The processors are symmetric, that is, they can do anything the others can.  Each can look at or alter any element of memory, and each can do any kind of I/O. 
 Symmetric multiprocessing Symmetric multiprocessing (SMP) is the most common configuration of multiple processors. A typical SMP configuration has the following items:        It has multiple processors and exactly one of everything else: memory, I/O subsystem, operating system, etc.        The processors are symmetric, that is, they can do anything the others can.  Each can look at or alter any element of memory, and each can do any kind of I/O. 
 Symmetric multiprocessing Symmetric multiprocessing (SMP) is the most common configuration of multiple processors. A typical SMP configuration has the following items:        It has multiple processors and exactly one of everything else: memory, I/O subsystem, operating system, etc.        The processors are symmetric, that is, they can do anything the others can.  Each can look at or alter any element of memory, and each can do any kind of I/O. 
 Symmetric multiprocessing Symmetric multiprocessing (SMP) is the most common configuration of multiple processors. A typical SMP configuration has the following items:        It has multiple processors and exactly one of everything else: memory, I/O subsystem, operating system, etc.        The processors are symmetric, that is, they can do anything the others can.  Each can look at or alter any element of memory, and each can do any kind of I/O. 
 Symmetric multiprocessing Symmetric multiprocessing (SMP) is the most common configuration of multiple processors. A typical SMP configuration has the following items:        It has multiple processors and exactly one of everything else: memory, I/O subsystem, operating system, etc.        The processors are symmetric, that is, they can do anything the others can.  Each can look at or alter any element of memory, and each can do any kind of I/O. 
1.        What is the difference between symmetric and asymmetric multiprocessing?
1.        What is the difference between symmetric and asymmetric multiprocessing?
  {
       
       
        {
        }
    }
         {
                {
                }
         }
Another difference is that: in a tightly-coupled system, the delay experienced when a message is sent from one computer to another is short, and data rate is high; that is, the number of bits per second that can be transferred is large. In a loosely-coupled system, the opposite is true: the intermachine message delay is large and the data rate is low. For example, two CPU chips on the same printed circuit board and connected by wires etched onto the board are likely to be tightly coupled, whereas two computers connected by a 2400 bit/sec modem over the telephone system are certain to be loosely coupled.
Another difference is that: in a tightly-coupled system, the delay experienced when a message is sent from one computer to another is short, and data rate is high; that is, the number of bits per second that can be transferred is large. In a loosely-coupled system, the opposite is true: the intermachine message delay is large and the data rate is low. For example, two CPU chips on the same printed circuit board and connected by wires etched onto the board are likely to be tightly coupled, whereas two computers connected by a 2400 bit/sec modem over the telephone system are certain to be loosely coupled.
Another difference is that: in a tightly-coupled system, the delay experienced when a message is sent from one computer to another is short, and data rate is high; that is, the number of bits per second that can be transferred is large. In a loosely-coupled system, the opposite is true: the intermachine message delay is large and the data rate is low. For example, two CPU chips on the same printed circuit board and connected by wires etched onto the board are likely to be tightly coupled, whereas two computers connected by a 2400 bit/sec modem over the telephone system are certain to be loosely coupled.
Another difference is that: in a tightly-coupled system, the delay experienced when a message is sent from one computer to another is short, and data rate is high; that is, the number of bits per second that can be transferred is large. In a loosely-coupled system, the opposite is true: the intermachine message delay is large and the data rate is low. For example, two CPU chips on the same printed circuit board and connected by wires etched onto the board are likely to be tightly coupled, whereas two computers connected by a 2400 bit/sec modem over the telephone system are certain to be loosely coupled.
Another difference is that: in a tightly-coupled system, the delay experienced when a message is sent from one computer to another is short, and data rate is high; that is, the number of bits per second that can be transferred is large. In a loosely-coupled system, the opposite is true: the intermachine message delay is large and the data rate is low. For example, two CPU chips on the same printed circuit board and connected by wires etched onto the board are likely to be tightly coupled, whereas two computers connected by a 2400 bit/sec modem over the telephone system are certain to be loosely coupled.
  {
       
       
        {
        }
    }
         {
                {
                }
         }
Toby Foster | Dec 12, 2007
Or, different OSs may reside on the two cores. For example, if two previously separate processors are being collapsed onto one dual-core device, different OSs may reside on the two cores.
Or, different OSs may reside on the two cores. For example, if two previously separate processors are being collapsed onto one dual-core device, different OSs may reside on the two cores.
