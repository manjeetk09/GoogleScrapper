Symmetric multiprocessing (SMP) involves a multiprocessor computer hardware and software architecture where two or more identical processors are connected to a single, shared main memory, have full access to all I/O devices, and are controlled by a single operating system instance that treats all processors equally, reserving none for special purposes. Most multiprocessor systems today use an SMP architecture. In the case of multi-core processors, the SMP architecture applies to the cores, treating them as separate processors.
Symmetric multiprocessing (SMP) involves a multiprocessor computer hardware and software architecture where two or more identical processors are connected to a single, shared main memory, have full access to all I/O devices, and are controlled by a single operating system instance that treats all processors equally, reserving none for special purposes. Most multiprocessor systems today use an SMP architecture. In the case of multi-core processors, the SMP architecture applies to the cores, treating them as separate processors.
Symmetric multiprocessing (SMP) involves a multiprocessor computer hardware and software architecture where two or more identical processors are connected to a single, shared main memory, have full access to all I/O devices, and are controlled by a single operating system instance that treats all processors equally, reserving none for special purposes. Most multiprocessor systems today use an SMP architecture. In the case of multi-core processors, the SMP architecture applies to the cores, treating them as separate processors.
v t e
v t e
v t e


SMP (symmetric multiprocessing) is the processing of programs by multiple processors that share a common operating system and memory. In symmetric (or "tightly coupled") multiprocessing, the processors share memory and the I/O bus or data path. A single copy of the operating system is in charge of all the processors. SMP, also known as a "shared everything" system, does not usually exceed 16 processors.
SMP (symmetric multiprocessing) is the processing of programs by multiple processors that share a common operating system and memory. In symmetric (or "tightly coupled") multiprocessing, the processors share memory and the I/O bus or data path. A single copy of the operating system is in charge of all the processors. SMP, also known as a "shared everything" system, does not usually exceed 16 processors.
SMP (symmetric multiprocessing) is the processing of programs by multiple processors that share a common operating system and memory. In symmetric (or "tightly coupled") multiprocessing, the processors share memory and the I/O bus or data path. A single copy of the operating system is in charge of all the processors. SMP, also known as a "shared everything" system, does not usually exceed 16 processors.
SMP (symmetric multiprocessing) is the processing of programs by multiple processors that share a common operating system and memory. In symmetric (or "tightly coupled") multiprocessing, the processors share memory and the I/O bus or data path. A single copy of the operating system is in charge of all the processors. SMP, also known as a "shared everything" system, does not usually exceed 16 processors.




One of the easiest and cheapest ways to improve hardware performance is to put more than one CPU on the board. This can be done either making the different CPU's take on different jobs (asymmetrical multi-processing) or by making them all run in parallel, doing the same job (symmetrical multi-processing, a.k.a. SMP). Doing asymmetrical multi-processing effectively requires specialized knowledge about the tasks the computer should do, which is unavailable in a general purpose operating system such as Linux. On the other hand, symmetrical multi-processing is relatively easy to implement.
One of the easiest and cheapest ways to improve hardware performance is to put more than one CPU on the board. This can be done either making the different CPU's take on different jobs (asymmetrical multi-processing) or by making them all run in parallel, doing the same job (symmetrical multi-processing, a.k.a. SMP). Doing asymmetrical multi-processing effectively requires specialized knowledge about the tasks the computer should do, which is unavailable in a general purpose operating system such as Linux. On the other hand, symmetrical multi-processing is relatively easy to implement.
One of the easiest and cheapest ways to improve hardware performance is to put more than one CPU on the board. This can be done either making the different CPU's take on different jobs (asymmetrical multi-processing) or by making them all run in parallel, doing the same job (symmetrical multi-processing, a.k.a. SMP). Doing asymmetrical multi-processing effectively requires specialized knowledge about the tasks the computer should do, which is unavailable in a general purpose operating system such as Linux. On the other hand, symmetrical multi-processing is relatively easy to implement.
One of the easiest and cheapest ways to improve hardware performance is to put more than one CPU on the board. This can be done either making the different CPU's take on different jobs (asymmetrical multi-processing) or by making them all run in parallel, doing the same job (symmetrical multi-processing, a.k.a. SMP). Doing asymmetrical multi-processing effectively requires specialized knowledge about the tasks the computer should do, which is unavailable in a general purpose operating system such as Linux. On the other hand, symmetrical multi-processing is relatively easy to implement.
One of the easiest and cheapest ways to improve hardware performance is to put more than one CPU on the board. This can be done either making the different CPU's take on different jobs (asymmetrical multi-processing) or by making them all run in parallel, doing the same job (symmetrical multi-processing, a.k.a. SMP). Doing asymmetrical multi-processing effectively requires specialized knowledge about the tasks the computer should do, which is unavailable in a general purpose operating system such as Linux. On the other hand, symmetrical multi-processing is relatively easy to implement.
One of the easiest and cheapest ways to improve hardware performance is to put more than one CPU on the board. This can be done either making the different CPU's take on different jobs (asymmetrical multi-processing) or by making them all run in parallel, doing the same job (symmetrical multi-processing, a.k.a. SMP). Doing asymmetrical multi-processing effectively requires specialized knowledge about the tasks the computer should do, which is unavailable in a general purpose operating system such as Linux. On the other hand, symmetrical multi-processing is relatively easy to implement.
One of the easiest and cheapest ways to improve hardware performance is to put more than one CPU on the board. This can be done either making the different CPU's take on different jobs (asymmetrical multi-processing) or by making them all run in parallel, doing the same job (symmetrical multi-processing, a.k.a. SMP). Doing asymmetrical multi-processing effectively requires specialized knowledge about the tasks the computer should do, which is unavailable in a general purpose operating system such as Linux. On the other hand, symmetrical multi-processing is relatively easy to implement.
(1) Short for Symmetric Multiprocessing, a computer architecture that provides fast performance by making multiple CPUs available to complete individual processes simultaneously (multiprocessing). Unlike asymmetrical processing, any idle processor can be assigned any task, and additional CPUs can be added to improve performance and handle increased loads. A variety of specialized operating systems and hardware arrangements are available to support SMP. Specific applications can benefit from SMP if the code allows multithreading.
(1) Short for Symmetric Multiprocessing, a computer architecture that provides fast performance by making multiple CPUs available to complete individual processes simultaneously (multiprocessing). Unlike asymmetrical processing, any idle processor can be assigned any task, and additional CPUs can be added to improve performance and handle increased loads. A variety of specialized operating systems and hardware arrangements are available to support SMP. Specific applications can benefit from SMP if the code allows multithreading.
(1) Short for Symmetric Multiprocessing, a computer architecture that provides fast performance by making multiple CPUs available to complete individual processes simultaneously (multiprocessing). Unlike asymmetrical processing, any idle processor can be assigned any task, and additional CPUs can be added to improve performance and handle increased loads. A variety of specialized operating systems and hardware arrangements are available to support SMP. Specific applications can benefit from SMP if the code allows multithreading.
(1) Short for Symmetric Multiprocessing, a computer architecture that provides fast performance by making multiple CPUs available to complete individual processes simultaneously (multiprocessing). Unlike asymmetrical processing, any idle processor can be assigned any task, and additional CPUs can be added to improve performance and handle increased loads. A variety of specialized operating systems and hardware arrangements are available to support SMP. Specific applications can benefit from SMP if the code allows multithreading.
Toby Foster | Dec 12, 2007
Engineers contemplating a migration from a single-core to a multicore processor must identify where parallelism exists in their application. The next decision is how to partition the code over the cores of the device. The two main options are symmetric-multiprocessor (SMP) mode and asymmetric-multiprocessor (AMP) mode.
Engineers contemplating a migration from a single-core to a multicore processor must identify where parallelism exists in their application. The next decision is how to partition the code over the cores of the device. The two main options are symmetric-multiprocessor (SMP) mode and asymmetric-multiprocessor (AMP) mode.
Engineers contemplating a migration from a single-core to a multicore processor must identify where parallelism exists in their application. The next decision is how to partition the code over the cores of the device. The two main options are symmetric-multiprocessor (SMP) mode and asymmetric-multiprocessor (AMP) mode.
Or, different OSs may reside on the two cores. For example, if two previously separate processors are being collapsed onto one dual-core device, different OSs may reside on the two cores.
Or, different OSs may reside on the two cores. For example, if two previously separate processors are being collapsed onto one dual-core device, different OSs may reside on the two cores.
By: Colin Walls, Posted on: June 17, 2015
By: Colin Walls, Posted on: June 17, 2015
By: Colin Walls, Posted on: June 17, 2015
     



AMP stands for Asymmetric Multi-Processing; SMP means Symmetric Multi-Processing. These terms are not at all transparent. In seeking a means to clarify, I thought I would check Wikipedia and looked up “AMP”. From the disambiguation page, I found the relevant article. Well, I say “relevant”, but it really does not cover the topic as we see it today. It talks about historical uses of multiple CPUs and dismisses it to history. So, I will try to advance definitions:
AMP stands for Asymmetric Multi-Processing; SMP means Symmetric Multi-Processing. These terms are not at all transparent. In seeking a means to clarify, I thought I would check Wikipedia and looked up “AMP”. From the disambiguation page, I found the relevant article. Well, I say “relevant”, but it really does not cover the topic as we see it today. It talks about historical uses of multiple CPUs and dismisses it to history. So, I will try to advance definitions:
AMP stands for Asymmetric Multi-Processing; SMP means Symmetric Multi-Processing. These terms are not at all transparent. In seeking a means to clarify, I thought I would check Wikipedia and looked up “AMP”. From the disambiguation page, I found the relevant article. Well, I say “relevant”, but it really does not cover the topic as we see it today. It talks about historical uses of multiple CPUs and dismisses it to history. So, I will try to advance definitions:
AMP stands for Asymmetric Multi-Processing; SMP means Symmetric Multi-Processing. These terms are not at all transparent. In seeking a means to clarify, I thought I would check Wikipedia and looked up “AMP”. From the disambiguation page, I found the relevant article. Well, I say “relevant”, but it really does not cover the topic as we see it today. It talks about historical uses of multiple CPUs and dismisses it to history. So, I will try to advance definitions:
AMP stands for Asymmetric Multi-Processing; SMP means Symmetric Multi-Processing. These terms are not at all transparent. In seeking a means to clarify, I thought I would check Wikipedia and looked up “AMP”. From the disambiguation page, I found the relevant article. Well, I say “relevant”, but it really does not cover the topic as we see it today. It talks about historical uses of multiple CPUs and dismisses it to history. So, I will try to advance definitions:
AMP stands for Asymmetric Multi-Processing; SMP means Symmetric Multi-Processing. These terms are not at all transparent. In seeking a means to clarify, I thought I would check Wikipedia and looked up “AMP”. From the disambiguation page, I found the relevant article. Well, I say “relevant”, but it really does not cover the topic as we see it today. It talks about historical uses of multiple CPUs and dismisses it to history. So, I will try to advance definitions:
AMP stands for Asymmetric Multi-Processing; SMP means Symmetric Multi-Processing. These terms are not at all transparent. In seeking a means to clarify, I thought I would check Wikipedia and looked up “AMP”. From the disambiguation page, I found the relevant article. Well, I say “relevant”, but it really does not cover the topic as we see it today. It talks about historical uses of multiple CPUs and dismisses it to history. So, I will try to advance definitions:
     



Asymmetric multiprocessing    In asymmetric multiprocessing the program tasks (or threads) are strictly divided by type between processors and typically, each processor has its own memory address space.  These features make asymmetric multiprocessing difficult to implement. The two figures below are two examples of asymmetric multiprocessor configurations. 
Asymmetric multiprocessing    In asymmetric multiprocessing the program tasks (or threads) are strictly divided by type between processors and typically, each processor has its own memory address space.  These features make asymmetric multiprocessing difficult to implement. The two figures below are two examples of asymmetric multiprocessor configurations. 
Asymmetric multiprocessing    In asymmetric multiprocessing the program tasks (or threads) are strictly divided by type between processors and typically, each processor has its own memory address space.  These features make asymmetric multiprocessing difficult to implement. The two figures below are two examples of asymmetric multiprocessor configurations. 
Asymmetric multiprocessing    In asymmetric multiprocessing the program tasks (or threads) are strictly divided by type between processors and typically, each processor has its own memory address space.  These features make asymmetric multiprocessing difficult to implement. The two figures below are two examples of asymmetric multiprocessor configurations. 
 Symmetric multiprocessing Symmetric multiprocessing (SMP) is the most common configuration of multiple processors. A typical SMP configuration has the following items:        It has multiple processors and exactly one of everything else: memory, I/O subsystem, operating system, etc.        The processors are symmetric, that is, they can do anything the others can.  Each can look at or alter any element of memory, and each can do any kind of I/O. 
 Symmetric multiprocessing Symmetric multiprocessing (SMP) is the most common configuration of multiple processors. A typical SMP configuration has the following items:        It has multiple processors and exactly one of everything else: memory, I/O subsystem, operating system, etc.        The processors are symmetric, that is, they can do anything the others can.  Each can look at or alter any element of memory, and each can do any kind of I/O. 
 Symmetric multiprocessing Symmetric multiprocessing (SMP) is the most common configuration of multiple processors. A typical SMP configuration has the following items:        It has multiple processors and exactly one of everything else: memory, I/O subsystem, operating system, etc.        The processors are symmetric, that is, they can do anything the others can.  Each can look at or alter any element of memory, and each can do any kind of I/O. 
 Symmetric multiprocessing Symmetric multiprocessing (SMP) is the most common configuration of multiple processors. A typical SMP configuration has the following items:        It has multiple processors and exactly one of everything else: memory, I/O subsystem, operating system, etc.        The processors are symmetric, that is, they can do anything the others can.  Each can look at or alter any element of memory, and each can do any kind of I/O. 
 Symmetric multiprocessing Symmetric multiprocessing (SMP) is the most common configuration of multiple processors. A typical SMP configuration has the following items:        It has multiple processors and exactly one of everything else: memory, I/O subsystem, operating system, etc.        The processors are symmetric, that is, they can do anything the others can.  Each can look at or alter any element of memory, and each can do any kind of I/O. 
 Symmetric multiprocessing Symmetric multiprocessing (SMP) is the most common configuration of multiple processors. A typical SMP configuration has the following items:        It has multiple processors and exactly one of everything else: memory, I/O subsystem, operating system, etc.        The processors are symmetric, that is, they can do anything the others can.  Each can look at or alter any element of memory, and each can do any kind of I/O. 
 Symmetric multiprocessing Symmetric multiprocessing (SMP) is the most common configuration of multiple processors. A typical SMP configuration has the following items:        It has multiple processors and exactly one of everything else: memory, I/O subsystem, operating system, etc.        The processors are symmetric, that is, they can do anything the others can.  Each can look at or alter any element of memory, and each can do any kind of I/O. 
