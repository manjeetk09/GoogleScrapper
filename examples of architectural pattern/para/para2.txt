The Broker architectural pattern can be used to structure distributed software systems with decoupled components that interact by remote service invocations
Broker
The Broker architectural pattern can be used to structure distributed software systems with decoupled components that interact by remote service invocations. A broker component is responsible for coordinating communication, such as forwarding requests, as well as for transmitting results and exceptions.
The Broker architectural pattern can be used to structure distributed software systems with decoupled components that interact by remote service invocations. A broker component is responsible for coordinating communication, such as forwarding requests, as well as for transmitting results and exceptions.
v t e
v t e
v t e


The distribution of the system often occurs after development is complete. For example, software may be distributed across multiple servers to increase processing power. You would not want to change the application code at this late a stage in the life cycle.
The distribution of the system often occurs after development is complete. For example, software may be distributed across multiple servers to increase processing power. You would not want to change the application code at this late a stage in the life cycle.
The distribution of the system often occurs after development is complete. For example, software may be distributed across multiple servers to increase processing power. You would not want to change the application code at this late a stage in the life cycle.
Use the Broker pattern to hide the implementation details of remote service invocation by encapsulating them into a layer other than the business component itself .
 Fowler, Martin. Patterns of Enterprise Application Architecture. Addison-Wesley, 2003.
 Fowler, Martin. Patterns of Enterprise Application Architecture. Addison-Wesley, 2003.
 Fowler, Martin. Patterns of Enterprise Application Architecture. Addison-Wesley, 2003.
