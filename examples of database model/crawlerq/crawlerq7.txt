Some object_oriented databases are designed to work well with object_oriented programming languages such as Delphi, Ruby, Python, Perl, Java, C , Visual Basic .
NET, C  , Objective_C and Smalltalk  others such as JADE have their own programming languages.
 OODBMSs use exactly the same model as object_oriented programming languages.
v.
t.
e.
.
.
An object_oriented database is a database that subscribes to a model with information represented by objects.
 Object_oriented databases are a niche offering in the relational database management system field and are not as successful or well_known as mainstream database engines.
.
.
.
.
.
As the name implies, the main feature of object_oriented databases is allowing the definition of objects, which are different from normal database objects.
 Objects, in an object_oriented database, reference the ability to develop a product, then define and name it.
 The object can then be referenced, or called later, as a unit without having to go into its complexities.
 This is very similar to objects used in object_oriented programming.
 A real_life parallel to objects is a car engine.
 It is composed of several parts.
 the main cylinder block, the exhaust system, intake manifold and so on.
 Each of these is a standalone component  but when machined and bolted into one object, they are now collectively referred to as an engine.
 Similarly, when programming one can define several components, such as a vertical line intersecting a perpendicular horizontal line while both lines have a graded measurement.
 This object can then be collectively labeled a graph.
 When utilizing the ability to plot components, there is no need to first define a graph  but rather the instance of the created graph can be called.
 Examples of object_oriented database engines include db4o, Smalltalk and Cache.
.
.
.
.
.
There are two types of object based data Models   Entity Relationship Model and Object oriented data model.
 ER data model is one of the important data model which forms the basis for the all the designs in the database world.
 It defines the mapping between the entities in the database.
 Object oriented data model, along with the mapping between the entities, describes the state of each entity and the tasks performed by them.
Consider the example above.
 It maps entities like Student, Lecturer, Subjects, and Marks with each other to form the relation among them.
 It also list attributes of each objects.
 ER model represents the all these entities, attributes and their relationship in the form of picture to make the developer understand the system better.
 A simple ER diagram for above example can be drawn as below.
 Are you able to understand what are the entities involved, what are its attributes and their relations that we were discussing better here  Yes, it is clean and clear what a STUDENT database look like.
 It gives the clear understanding of how they are scattered and mapped.
 If we have missed any entities or attribute or the mapping, we can easily identify here.
 If we represent it in some tables, it would be difficult to identify this gap.
Let us consider an Employee database to understand this model better.
 In this database we have different types of employees   Engineer, Accountant, Manager, Clark.
 But all these employees belong to Person group.
 Person can have different attributes like name, address, age and phone.
 What do we do if we want to get a person s address and phone number  We write two separate procedure sp_getAddress and sp_getPhone.
