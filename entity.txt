based
entity_relationship
main_techniques
basis
database_design_methodology
forms
emerged
modeling_database_design
definition
object
describe
actions
state
behavior
encapsulate
oo_system
semantic_systems_represent
record
equivalent
relational_system
include_behaviour
represent_real_world
abstractions
customer
conceptual
bank_account__objects
functional_data_model
twenty_years
querying
original_idea
extensionally_defined_functions
functional_language
view
simplicity
learn
simple
fast
information
hierarchical_database
parent_child_relationships
records
groups
repeating_information
structure_implies
field_values_attached
structure_data
collects
record_type
rows
individual_records
record_types
create_links
type_relationships
advance
defined
advantage_hierarchical_database
model_structure
updated_rapidly
accessed
feature
two_edged
database_structure
make_sense
permitted
linkages
child
logical_standpoint
disadvantage
entire_database
adding
redefined
record_requires
field
large_digital_computers
network_database
limitations
kind
made
considered
connections
efficiency
similar
hierarchical_structure
cobweb
interconnected_network
series
table
stored
fields_specific
flexibility
decades
survived
time
recall
saves
massive_database
query
user_enters_data
database_models_generally
business_organizations
categorized
types
industry
hierarchical_data_model
network_data_model
relational_data_model
similar_situation_exists
applicable
nature
fourth_model
objects
models_providing_flexibility
structured
application
compared
designing
higher_level
database_management_systems
structural_types
hierarchical_databases
network_databases
relational_databases
object_oriented_databases
associations
reality
real_world__objects
representation
events
abstraction
inherent_aspects
accidental_properties
ignores
concentrates
organization
essential
data_model_represents
database_designers
provide
end_users_unambiguously
communicate
accurately
basic_concepts
notations
organizational_data
understanding
oldest_database_models
dating
late_1950s
developed_jointly
ibm
branches
records_forming
tree
fields_forming
nodes
supplier_record
tree_structure
parts_record_superior
parts_form
supplier_forms
children
parent
consists
set
trees_figure
part_record_occurrence
supplier
part
supplier_occurrence_includes
shipment_quantity
object_oriented_database_model
object_relational_model
entity_relationship_model
nosql_database_models
web
databases
database_model_defines
logical_design
relationships
parts
model_describes
database_design
historically
commonly
glossary
database
data
real_world
enterprise
modeling
fact
selected_information_needed
formally
intuitive
languages
informal
designers
mathematically_defined
tutorial
data_models
process
detailed_data_model
producing
needed_logical
data_definition_language
create
physical_design_choices
design
generate
detailed_attributes
database_system
thought
correctly
principally
store
tables
views
relationships_map_directly
object_classes
named_relationships
object_database
database_application
queries
term_database_design
base_data_structures
database_management_system
apply
databases_include
hierarchical_database_model
network_model
relational_model
object_model
document_model
entity_attribute
model
star_schema
enhanced
kinds
include
common
entity_attribute_value_model
combines
make
close
provide_concepts
present
people_perceive_data
entities
typical
attributes
type
main_concepts
employee
project
entity_represents
real_world_object
represents_properties
birthdate
entity
address
employee_works
relationship_represents
projects
association
relationship_exists
database_models
database_systems
description
rules
data_model
collection
concepts
structure
database_means
data_types
storage
constraints
models
hierarchical_model
data_models_define
modeled
logical_structure
fundamental_entities
introduce_abstraction
dbms
stored_inside
system
connected
processed
notion
real_world_entities
formulating_real_world_scenario
general_attributes
database_model
relationship_set
