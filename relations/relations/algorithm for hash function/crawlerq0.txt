A hash function is any function that can be used to map data of arbitrary size to data of fixed size.
 The values returned by a hash function are called hash values, hash codes, digests, or simply hashes.
 One use is a data structure called a hash table, widely used in computer software for rapid data lookup.
 Hash functions accelerate table or database lookup by detecting duplicated records in a large file.
 An example is finding similar stretches in DNA sequences.
 They are also useful in cryptography.
 A cryptographic hash function allows one to easily verify that some input data maps to a given hash value, but if the input data is unknown, it is deliberately difficult to reconstruct it by knowing the stored hash value.
 This is used for assuring integrity of transmitted data, and is the building block for HMACs, which provide message authentication.
v.
t.
e.
.
.
A hash table is a collection of items which are stored in such a way as to make it easy to find them later.
 Each position of the hash table, often called a slot, can hold an item and is named by an integer value starting at 0.
 For example, we will have a slot named 0, a slot named 1, a slot named 2, and so on.
 Initially, the hash table contains no items so every slot is empty.
 We can implement a hash table by using a list with each element initialized to the special Python value None.
 Figure 4 shows a hash table of size  .
 In other words, there are m slots in the table, named 0 through 10.
A hash function is any function that can be used to map data of arbitrary size to data of fixed size.
 The values returned by a hash function are called hash values, hash codes, digests, or simply hashes.
 One use is a data structure called a hash table, widely used in computer software for rapid data lookup.
 Hash functions accelerate table or database lookup by detecting duplicated records in a large file.
 An example is finding similar stretches in DNA sequences.
 They are also useful in cryptography.
 A cryptographic hash function allows one to easily verify that some input data maps to a given hash value, but if the input data is unknown, it is deliberately difficult to reconstruct it by knowing the stored hash value.
 This is used for assuring integrity of transmitted data, and is the building block for HMACs, which provide message authentication.
v.
t.
e.
.
.
Understand the difference between hash function and algorithm correctly.
 The hash function generates a hash code by operating on two blocks of fixed_length binary data.
What is a good Hash function  I saw a lot of hash function and applications in my data structures courses in college, but I mostly got that it s pretty hard to make a good hash function.
 As a rule of thumb to avoid collisions my professor said that.
For doing  normal  hash table lookups on basically any kind of data _ this one by Paul Hsieh is the best I ve ever used.
Choosing a good hashing function, h, is essential for hash_table based searching.
 h should distribute the elements of our collection as uniformly as possible to the  slots  of the hash table.
 The key criterion is that there should be a minimum number of collisions.
